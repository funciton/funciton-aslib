package funciton.models {		import funciton.utils.DateUtils;		public class UpstreamServer {				private var $__host:String = "";		private var $__port:int = -1;		private var $__protocol:String = "http";		private var $__down:Boolean = false;		private var $__timeout:int = -1;		private var $__weight:uint = 1;		private var $__backup:Boolean = false;		private var $__maxFails:int = -1;		private var $__expires:uint = DateUtils.HOUR_IN_MS;		private var $__appName:String = "";				public function UpstreamServer(host:String, appName:String = "", port:int = -1, protocol:String = "http"){			this.host = host;			$__port = port;			$__protocol = protocol;			$__appName = appName;		}				public function get down():Boolean{ return $__down; }		public function set down(value:Boolean):void{ $__down = value; }				public function get host():String{ return $__host; }		public function set host(value:String):void{			if(!value.length) throw new URIError("Invalid value for 'host' property");			$__host = value;		}				public function get port():int{ return $__port; }		public function set port(value:int):void{ $__port = value; }				public function get protocol():String{ return $__protocol; }		public function set protocol(value:String):void{ $__protocol = value; }				public function get timeout():int{ return $__timeout; }		public function set timeout(value:int):void{ $__timeout = value; }				public function get weight():uint{ return $__weight; }		public function set weight(value:uint):void{ $__weight = value; }				public function get max_fails():int{ return $__maxFails; }		public function set max_fails(value:int):void{ $__maxFails = value; }				public function get backup():Boolean{ return $__backup; }		public function set backup(value:Boolean):void{ $__backup = value; }						public function get expires():uint{ return $__expires; }		public function set expires(value:uint):void{ $__expires = value; }				public function get appName():String{ return $__appName; }		public function set appName(value:String):void{ $__appName = value; }				public function get uri():String{			var res:String = $__protocol + "://" + $__host;			if($__port != -1) res += ":" + $__port;			if(appName.length) res += "/" + $__appName;						return res;		}			}	}